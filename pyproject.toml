[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "qwen-cli"
dynamic = ["version"]
description = "A local, secure, AI-powered CLI assistant using Qwen via Ollama"
authors = [
    { name = "Your Name", email = "you@example.com" }
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Utilities",
    "Typing :: Typed"
]

# Dependencies
dependencies = [
    "requests>=2.25.0"
]

[project.scripts]
qwen = "qwen_cli.__main__:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
qwen_cli = ["*.md"]

[tool.setuptools.dynamic]
version = { attr = "qwen_cli.__version__" }

[project.optional-dependencies]
test = [
    "pytest>=7.0",
    "requests-mock>=1.10.0"
]

# === Pytest Configuration ===
[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = [
    "-v",
    "--tb=short",
    "-l"
]

# Optional: Control how warnings are handled
# By default, pytest shows DeprecationWarning and ResourceWarning
# Uncomment below to ignore common noisy warnings
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::ResourceWarning",
    # Example: ignore specific Ollama/connection warnings
    'ignore::UserWarning:.*connection closed.*',
    'ignore::ResourceWarning:.*unclosed socket.*'
]